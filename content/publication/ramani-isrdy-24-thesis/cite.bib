@phdthesis{
author={Ramani,Vishakha},
year={2024},
title={Storing, Retrieving, and Processing Updates: A Timeliness Perspective},
journal={ProQuest Dissertations and Theses},
pages={220},
note={Copyright - Database copyright ProQuest LLC; ProQuest does not claim copyright in the individual underlying works; Last updated - 2025-01-06},
abstract={Time-critical applications, such as virtual reality and cyber-physical systems, require not only low end-to-end latency, but also the timely delivery of information. While high-speed Ethernet adoption has reduced interconnect fabric latency, bottlenecks persist in data storage, retrieval, and processing. This work examines status updating systems where sources generate time-stamped updates that are stored in memory, and readers fulfill client requests by accessing these stored updates. Clients then utilize the retrieved updates for further computations. The asynchronous interaction between writers and readers presents challenges, including: (i) the potential for readers to encounter stale updates due to temporal disparities between the writing and reading processes, (ii) the necessity to synchronize writers and readers to prevent race conditions, and (iii) the imperative for clients to process and deliver updates within strict temporal constraints. In the first part, we study optimal reading policies in both discrete and continuous time domains to minimize the Age of Information (AoI) of source updates at the client. One of the main contributions of this part includes showing that lazy reading is timely. In the second part, we analyze the impact of synchronization primitives on update timeliness in a packet forwarding scenario, where location updates are written to a shared routing table, and application updates read from it to ensure correct delivery. Our theoretical and experimental results show that using a lock-based primitive is suitable for timely application update delivery at higher location update rates, while a lock-free mechanism is more effective at lower rates. The final part focuses on optimizing update processing when updates require multiple sequential computational steps. We compare the age performance across a multitude of pipelined and parallel server models and characterize the age-power trade-off in these models. Additionally, our analysis reveals that synchronous sequential processing is more conducive to timely update processing than asynchronous methods, and that parallel processing outperforms pipeline services in terms of AoI.},
keywords={Status updating systems; Time-stamped updates; Age of Information; Lock-based primitive; Electrical engineering; Computer engineering; Information science; 0723:Information science; 0544:Electrical engineering; 0464:Computer Engineering},
isbn={9798342748858},
language={English},
url={https://login.proxy.libraries.rutgers.edu/login?qurl=https%3A%2F%2Fwww.proquest.com%2Fdissertations-theses%2Fstoring-retrieving-processing-updates-timeliness%2Fdocview%2F3128011382%2Fse-2%3Faccountid%3D13626},
}